{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react-forms\\\\src\\\\components\\\\SimpleInput.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const nameIsValid = name => {\n    return name.trim() != '';\n  };\n  const {\n    inputValue: nameValue,\n    inputValueIsValid: nameValueIsValid,\n    isError: isErrorInName,\n    inputValueChangeHandler: nameValueChangeHandler,\n    inputFieldBlurHandler: nameFieldBlurHandler,\n    reset: resetName\n  } = useInput(nameIsValid);\n  const isValidEmail = email => {\n    if (email == '') {\n      return false;\n    }\n    return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n  };\n  const {\n    inputValue: emailValue,\n    inputValueIsValid: emailValueIsValid,\n    isError: isErrorInEmail,\n    inputValueChangeHandler: emailValueChangeHandler,\n    inputFieldBlurHandler: emailFieldBlurHandler,\n    reset: resetEmail\n  } = useInput(isValidEmail);\n  const formIsValid = nameValueIsValid && emailValueIsValid;\n  const handleFormSubmission = event => {\n    //The first thing is to prevent default behaviour\n    event.preventDefault();\n    if (!formIsValid) {\n      return;\n    }\n    resetName();\n    resetEmail();\n  };\n  const nameInputClasses = !isErrorInName ? 'input' : 'input invalid';\n  const emailInputClasses = !isErrorInEmail ? 'email' : 'email invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFormSubmission,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"inpu\", {\n        className: nameInputClasses,\n        value: nameValue,\n        onChange: nameValueChangeHandler,\n        type: \"text\",\n        id: \"name\",\n        onBlur: nameFieldBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), isErrorInName && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \"* Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Id : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: emailInputClasses,\n        value: emailValue,\n        onChange: emailValueChangeHandler,\n        type: \"email\",\n        id: \"email\",\n        onBlur: emailFieldBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), isErrorInEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \"*Not a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"YGpg8cf/ZHi8iKPmSzC7ZbNe80o=\", false, function () {\n  return [useInput, useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useRef","useEffect","useInput","SimpleInput","props","nameIsValid","name","trim","inputValue","nameValue","inputValueIsValid","nameValueIsValid","isError","isErrorInName","inputValueChangeHandler","nameValueChangeHandler","inputFieldBlurHandler","nameFieldBlurHandler","reset","resetName","isValidEmail","email","String","toLowerCase","match","emailValue","emailValueIsValid","isErrorInEmail","emailValueChangeHandler","emailFieldBlurHandler","resetEmail","formIsValid","handleFormSubmission","event","preventDefault","nameInputClasses","emailInputClasses","color"],"sources":["D:/React/react-forms/src/components/SimpleInput.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\n\nconst SimpleInput = (props) => {\n\n  const nameIsValid = (name) => {\n    return name.trim() != '';\n  }\n  const {\n    inputValue: nameValue,\n    inputValueIsValid: nameValueIsValid,\n    isError: isErrorInName,\n    inputValueChangeHandler: nameValueChangeHandler,\n    inputFieldBlurHandler: nameFieldBlurHandler,\n    reset: resetName\n\n  } = useInput(nameIsValid);\n\n  const isValidEmail = (email) => {\n\n    if (email == '') {\n      return false;\n    }\n    return String(email)\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      );\n  };\n\n  const {\n    inputValue: emailValue,\n    inputValueIsValid: emailValueIsValid,\n    isError: isErrorInEmail,\n    inputValueChangeHandler: emailValueChangeHandler,\n    inputFieldBlurHandler: emailFieldBlurHandler,\n    reset: resetEmail\n\n  } = useInput(isValidEmail);\n\n\n  const formIsValid = nameValueIsValid && emailValueIsValid;\n  const handleFormSubmission = (event) => {\n    //The first thing is to prevent default behaviour\n    event.preventDefault();\n    if (!formIsValid) {\n      return;\n    }\n    resetName();\n    resetEmail();\n  }\n\n  const nameInputClasses = !isErrorInName ? 'input' : 'input invalid';\n  const emailInputClasses = !isErrorInEmail ? 'email' : 'email invalid';\n\n  return (\n    <form onSubmit={handleFormSubmission}>\n      <div className='form-control'>\n        <label htmlFor='name'>Your Name</label>\n        <inpu\n          className={nameInputClasses}\n          value={nameValue}\n          onChange={nameValueChangeHandler}\n          type='text'\n          id='name'\n          onBlur={nameFieldBlurHandler}\n        />\n        {isErrorInName && <p style={{ color: 'red' }}>* Name must not be empty</p>}\n        <label htmlFor='email'>Email Id : </label>\n        <input\n          className={emailInputClasses}\n          value={emailValue}\n          onChange={emailValueChangeHandler}\n          type='email'\n          id='email'\n          onBlur={emailFieldBlurHandler}\n        />\n        {isErrorInEmail && <p style={{ color: 'red' }}>*Not a valid email</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}