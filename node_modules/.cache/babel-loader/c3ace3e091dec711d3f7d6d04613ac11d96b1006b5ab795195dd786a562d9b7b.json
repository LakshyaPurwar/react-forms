{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react-forms\\\\src\\\\components\\\\SimpleInput.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const nameIsValid = name => {\n    return name.trim() != '';\n  };\n  const {\n    inputValue: nameValue,\n    inputValueIsValid: nameValueIsValid,\n    isError: isErrorInName,\n    inputValueChangeHandler: nameValueChangeHandler,\n    inputFieldBlurHandler: nameFieldBlurHandler,\n    reset: resetName\n  } = useInput(nameIsValid);\n  const [inputEmail, setInputEmail] = useState('');\n  // const [enteredNameIsValid , setEnteredNameIsValid] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  //Better , we have a derived state denoting validity of inputName\n  const isValidEmail = email => {\n    if (email == '') {\n      return false;\n    }\n    return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n  };\n  const enteredEmailIsValid = isValidEmail(inputEmail);\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  const formIsValid = enteredNameIsValid && enteredEmailIsValid;\n  const handleInputEmailChange = event => {\n    setInputEmail(event.target.value);\n  };\n  const handleEmailInputBlur = () => {\n    setEnteredEmailTouched(true);\n  };\n  const handleFormSubmission = event => {\n    //The first thing is to prevent default behaviour\n    event.preventDefault();\n    if (!inputValueIsValid && enteredEmailIsValid) {\n      return;\n    }\n    setInputEmail('');\n    setEnteredEmailTouched(false);\n    console.log(inputName);\n  };\n  const nameInputClasses = !isErrorInName ? 'input' : 'input invalid';\n  const emailInputClasses = !emailInputIsInvalid ? 'email' : 'email invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFormSubmission,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        /* ref={nameInputRef}*/\n        className: nameInputClasses,\n        value: nameValue,\n        onChange: nameValueChangeHandler,\n        type: \"text\",\n        id: \"name\",\n        onBlur: nameFieldBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), isErrorInName && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \"* Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Id : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        /* ref={nameInputRef}*/\n        className: emailInputClasses,\n        value: inputEmail,\n        onChange: handleInputEmailChange,\n        type: \"text\",\n        id: \"email\",\n        onBlur: handleEmailInputBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \"*Not a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"wMx0IE4Q9eLxpuFpDlgjIuEq1yY=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useRef","useEffect","useInput","SimpleInput","props","nameIsValid","name","trim","inputValue","nameValue","inputValueIsValid","nameValueIsValid","isError","isErrorInName","inputValueChangeHandler","nameValueChangeHandler","inputFieldBlurHandler","nameFieldBlurHandler","reset","resetName","inputEmail","setInputEmail","enteredEmailTouched","setEnteredEmailTouched","isValidEmail","email","String","toLowerCase","match","enteredEmailIsValid","emailInputIsInvalid","formIsValid","enteredNameIsValid","handleInputEmailChange","event","target","value","handleEmailInputBlur","handleFormSubmission","preventDefault","console","log","inputName","nameInputClasses","emailInputClasses","color"],"sources":["D:/React/react-forms/src/components/SimpleInput.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\n\nconst SimpleInput = (props) => {\n\n  const nameIsValid = (name)=>{\n    return name.trim()!='';\n  }\n  const {\n    inputValue : nameValue,\n    inputValueIsValid : nameValueIsValid,\n    isError : isErrorInName,\n    inputValueChangeHandler : nameValueChangeHandler,\n    inputFieldBlurHandler : nameFieldBlurHandler,\n    reset : resetName\n\n  } = useInput(nameIsValid);\n\n  const [inputEmail, setInputEmail] = useState('');\n  // const [enteredNameIsValid , setEnteredNameIsValid] = useState(false);\n  const [enteredEmailTouched , setEnteredEmailTouched] = useState(false);\n  \n  //Better , we have a derived state denoting validity of inputName\n  const isValidEmail = (email) => {\n\n    if(email == '')\n    {\n      return false;\n    }\n    return String(email)\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      );\n  };\n\n\n \n  const enteredEmailIsValid = isValidEmail(inputEmail);\n  \n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  const formIsValid = enteredNameIsValid && enteredEmailIsValid;\n\n\n  const handleInputEmailChange = (event)=>{\n    setInputEmail(event.target.value);\n  }\n\n  const handleEmailInputBlur = ()=>{\n    setEnteredEmailTouched(true);\n  }\n  \n  const handleFormSubmission = (event)=>{\n    //The first thing is to prevent default behaviour\n    event.preventDefault();\n    if(!inputValueIsValid && enteredEmailIsValid)\n    {\n      return;\n    }\n    \n    setInputEmail('');\n    setEnteredEmailTouched(false);\n    console.log(inputName);\n  }\n\n  const nameInputClasses = !isErrorInName ? 'input' : 'input invalid';\n  const emailInputClasses = !emailInputIsInvalid?'email': 'email invalid';\n  \n  return (\n    <form onSubmit={handleFormSubmission}>\n      <div className='form-control'>\n        <label htmlFor='name'>Your Name</label>\n        <input\n         /* ref={nameInputRef}*/\n         className={nameInputClasses}\n         value={nameValue}\n         onChange={nameValueChangeHandler}\n         type='text'\n         id='name'\n         onBlur={nameFieldBlurHandler}\n         />\n        { isErrorInName && <p style={{color:'red'}}>* Name must not be empty</p>}\n\n        {/* The email input field will be applied here */}\n        <label htmlFor='email'>Email Id : </label>\n        <input\n         /* ref={nameInputRef}*/\n         className={emailInputClasses}\n         value={inputEmail}\n         onChange={handleInputEmailChange}\n         type='text'\n         id='email'\n         onBlur={handleEmailInputBlur}\n         />\n        { emailInputIsInvalid && <p style={{color:'red'}}>*Not a valid email</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}