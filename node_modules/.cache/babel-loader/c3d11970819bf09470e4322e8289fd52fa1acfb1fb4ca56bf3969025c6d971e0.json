{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react-forms\\\\src\\\\components\\\\BasicForm.jsx\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/useInput\";\nimport isValidEmail from \"../validations/isValidEmail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicForm = props => {\n  _s();\n  const {\n    inputValue: fNameValue,\n    inputValueIsValid: fNameIsValid,\n    isError: isErrorInFName,\n    inputValueChangeHandler: fNameValueChangeHandler,\n    inputFieldBlurHandler: fNameFieldBlurHandler,\n    reset: resetFName\n  } = useInput(fname => {\n    return fname != '';\n  });\n  const {\n    inputValue: lNameValue,\n    inputValueIsValid: lNameIsValid,\n    isError: isErrorInLName,\n    inputValueChangeHandler: lNameValueChangeHandler,\n    inputFieldBlurHandler: lNameFieldBlurHandler,\n    reset: resetLName\n  } = useInput(lname => {\n    return lname != '';\n  });\n  const {\n    inputValue: emailValue,\n    inputValueIsValid: emailIsValid,\n    isError: isErrorInEmail,\n    inputValueChangeHandler: emailValueChangeHandler,\n    inputFieldBlurHandler: emailFieldBlurHandler,\n    reset: resetEmail\n  } = useInput(isValidEmail);\n  const formIsValid = fNameIsValid && lNameIsValid && emailIsValid;\n  const formSubmissionHandler = () => {};\n  const fNameClasses = isErrorInFName ? 'fName invalid' : 'fName';\n  const lNameClasses = isErrorInLName ? 'lName invalid' : 'lName';\n  const emailClasses = isErrorInEmail ? 'email invalid' : 'email';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fname\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"fname\",\n          className: fNameClasses,\n          onChange: fNameValueChangeHandler,\n          onBlur: fNameFieldBlurHandler,\n          value: fNameValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), isErrorInFName && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"* Name cannot be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lname\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lname\",\n          className: lNameClasses,\n          value: lNameValue,\n          onChange: lNameValueChangeHandler,\n          onBlur: lNameFieldBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), isErrorInLName && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"* Name cannot be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        className: emailClasses,\n        value: emailValue,\n        onChange: emailValueChangeHandler,\n        onBlur: emailFieldBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), isErrorInEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"*Email is Invalid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"LE40v/KJJNJwt8c7GF3v2hc6JkE=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInput","isValidEmail","BasicForm","props","inputValue","fNameValue","inputValueIsValid","fNameIsValid","isError","isErrorInFName","inputValueChangeHandler","fNameValueChangeHandler","inputFieldBlurHandler","fNameFieldBlurHandler","reset","resetFName","fname","lNameValue","lNameIsValid","isErrorInLName","lNameValueChangeHandler","lNameFieldBlurHandler","resetLName","lname","emailValue","emailIsValid","isErrorInEmail","emailValueChangeHandler","emailFieldBlurHandler","resetEmail","formIsValid","formSubmissionHandler","fNameClasses","lNameClasses","emailClasses"],"sources":["D:/React/react-forms/src/components/BasicForm.jsx"],"sourcesContent":["import useInput from \"../hooks/useInput\";\nimport isValidEmail from \"../validations/isValidEmail\";\n\n\nconst BasicForm = (props) => {\n\n  const{\n    inputValue : fNameValue,\n    inputValueIsValid : fNameIsValid,\n    isError : isErrorInFName,\n    inputValueChangeHandler : fNameValueChangeHandler,\n    inputFieldBlurHandler : fNameFieldBlurHandler,\n    reset  : resetFName\n\n  } = useInput((fname)=>{return fname!=''});\n\n  const{\n    inputValue : lNameValue,\n    inputValueIsValid : lNameIsValid,\n    isError : isErrorInLName,\n    inputValueChangeHandler : lNameValueChangeHandler,\n    inputFieldBlurHandler : lNameFieldBlurHandler,\n    reset  : resetLName\n\n  } = useInput((lname)=>{return lname!=''});\n\n  const{\n    inputValue : emailValue,\n    inputValueIsValid : emailIsValid,\n    isError : isErrorInEmail,\n    inputValueChangeHandler : emailValueChangeHandler,\n    inputFieldBlurHandler : emailFieldBlurHandler,\n    reset  : resetEmail,\n\n  } = useInput(isValidEmail);\n\n  const formIsValid = fNameIsValid && lNameIsValid && emailIsValid;\n\n  const formSubmissionHandler = ()=>{\n\n    \n\n  }\n\n  const fNameClasses = isErrorInFName ? 'fName invalid' : 'fName';\n  const lNameClasses = isErrorInLName ? 'lName invalid' : 'lName';\n  const emailClasses = isErrorInEmail ? 'email invalid' : 'email';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className='control-group'>\n        <div className='form-control'>\n          <label htmlFor='fname'>First Name</label>\n          <input type='text'\n           id='fname'\n           className={fNameClasses}\n           onChange = {fNameValueChangeHandler}\n           onBlur = {fNameFieldBlurHandler}\n           value = {fNameValue}\n           />\n          {isErrorInFName && <p className=\"error-text\">* Name cannot be empty</p>}\n        </div>\n        <div className='form-control'>\n          <label htmlFor='lname'>Last Name</label>\n          <input\n           type='text'\n            id='lname' \n            className={lNameClasses}\n            value={lNameValue}\n            onChange={lNameValueChangeHandler}\n            onBlur = {lNameFieldBlurHandler}\n            />\n          {isErrorInLName &&<p className=\"error-text\">* Name cannot be empty</p>}\n        </div>\n      </div>\n      <div className='form-control'>\n        <label htmlFor='email'>E-Mail Address</label>\n        <input\n         type='email'\n          id='email'\n          className={emailClasses}\n          value = {emailValue}\n          onChange = {emailValueChangeHandler}\n          onBlur = {emailFieldBlurHandler}\n          />\n        {isErrorInEmail && <p className=\"error-text\">*Email is Invalid</p>}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}